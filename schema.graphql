schema {
  query: Query
  mutation: Mutation
}

type Post {
  id: ID!
  title: String!
  body: String!
  userId: ID!
}

type Comment {
  id: ID!
  postId: ID!
  body: String
  email: String
  name: String
}

type PostResult {
  success: Boolean!
  errors: [String]
  post: Post
}

type PostsResult {
  success: Boolean!
  errors: [String]
  post: [Post]
}

type CommentResult {
  success: Boolean!
  errors: [String]
  comment: Comment
}

type CommentsResult {
  success: Boolean!
  errors: [String]
  comments: [Comment]
}

type Query {
  listPosts: PostsResult!
  getPost(id: ID!): PostResult!
  listComments: CommentsResult!
  getComment(id: ID!): CommentResult!
}

type Mutation {
  createPost(input: PostInput!): PostResult!
  updatePost(id: ID!, input: PostInput!): PostResult!
  deletePost(id: ID!): PostResult!
  createComment(input: CommentInput!): CommentResult!
  updateComment(id: ID!, input: CommentInput!): CommentResult!
  deleteComment(id: ID!): CommentResult!
}

input PostInput {
  id: ID!
  title: String!
  body: String!
  userId: ID
}

input CommentInput {
  id: ID!
  postId: ID!
  body: String!
  email: String!
  name: String!
}
